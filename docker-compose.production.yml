services:
  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-config:/etc/traefik
      - traefik-acme:/etc/traefik/acme
    environment:
      TRAEFIK_DOMAIN: ${TRAEFIK_DOMAIN}
      TRAEFIK_EMAIL: ${TRAEFIK_EMAIL}
    restart: always

  postgres:
    image: postgres:latest
    container_name: n8n_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  n8n:
    build:
      context: .
      dockerfile: ./compose/production/n8n/Dockerfile
    container_name: n8n
    environment:
      DB_TYPE: "postgresdb"
      DB_POSTGRESDB_HOST: "postgres"
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      GENERIC_TIMEZONE: "America/Bogota"
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
    volumes:
      - n8n_data:/home/node/.n8n
    restart: always
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`automations.smk.agency`)"
      - "traefik.http.routers.n8n.entrypoints=web-secure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

volumes:
  traefik-config: {}
  traefik-acme: {}
  postgres_data: {}
  n8n_data: {}
