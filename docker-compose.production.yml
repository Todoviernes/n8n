version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: n8n_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    environment:
      DB_TYPE: ${DB_TYPE}
      DB_POSTGRESDB_HOST: ${DB_POSTGRESDB_HOST}
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE}
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_PROTOCOL: https
      N8N_HOST: ${DOMAIN}
      N8N_PORT: 5678
    volumes:
      - n8n_data:/home/node/.n8n
    restart: always
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    container_name: n8n_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/lib/letsencrypt
    depends_on:
      - n8n
    restart: always

  certbot:
    image: certbot/certbot:latest
    container_name: n8n_certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/lib/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/lib/letsencrypt && sleep 12h & wait $!; done'"
    restart: always

volumes:
  postgres_data:
  n8n_data:
  certbot_conf:
  certbot_www:
